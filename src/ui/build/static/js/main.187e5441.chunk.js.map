{"version":3,"sources":["page/main.js","index.js","App.js"],"names":["MainPage","props","fetchData","a","async","fetch","response","json","reformat","data","master","years","map","d","year","Set","forEach","y","months","filter","f","month","m","groups","dir","g","images","setState","toMonth","monthNumber","parseInt","renderImages","i","Image","key","thumbnail","src","bordered","renderGroups","Object","keys","Segment","Header","sub","length","Group","size","Divider","renderMonths","renderYears","as","render","state","Container","React","Component","ReactDOM","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.187e5441.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Header, Segment, Divider, Image } from 'semantic-ui-react'\r\n\r\n\r\nclass MainPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n        this.fetchData()\r\n    }\r\n\r\n    fetchData = async () =>{\r\n        let response = await fetch('/api/data')\r\n        let json = await response.json()\r\n        this.reformat(json.data)\r\n    }\r\n\r\n    reformat = (data) => {\r\n        let master = {}\r\n        let years = data.map((d) => d.year)\r\n        let uniqueYears = new Set(years)\r\n        uniqueYears.forEach((y) => {\r\n            master[y] = {}\r\n            let months = data.filter((d) => d.year === y).map(f => f.month)\r\n            let uniqueMonths = new Set(months)\r\n            uniqueMonths.forEach((m) => {\r\n                master[y][m] = {}\r\n                let groups = data.filter((d) => d.year === y && d.month === m).map(f => f.dir)\r\n                let uniqueGroups = new Set(groups)\r\n                uniqueGroups.forEach(g => {\r\n                    let images = data.filter(d => d.year === y && d.month === m && d.dir === g);\r\n                    master[y][m][g] = images\r\n                })\r\n            })\r\n        })\r\n    \r\n        this.setState({ data: master})\r\n    }\r\n\r\n    toMonth = (monthNumber) => {\r\n        switch(parseInt(monthNumber)){\r\n            case 1:\r\n                return \"Jan\"\r\n            case 2:\r\n                return \"Feb\"\r\n            case 3:\r\n                return \"Mar\"\r\n            case 4:\r\n                return \"Apr\"\r\n            case 5:\r\n                return \"May\"\r\n            case 6:\r\n                return \"Jun\"\r\n            case 7:\r\n                return \"Jul\"\r\n            case 8:\r\n                return \"Aug\"\r\n            case 9:\r\n                return \"Sep\"\r\n            case 10:\r\n                return \"Oct\"\r\n            case 11:\r\n                return \"Nov\"\r\n            case 12:\r\n                return \"Dec\"\r\n            default:\r\n                return \"Unknown\"\r\n        }\r\n\r\n    }\r\n    renderImages = (images) => {\r\n        return images.map(i => <Image key={i.thumbnail} src={i.thumbnail} bordered />)\r\n    }\r\n    renderGroups = (groups) => {\r\n        return Object.keys(groups).map(g => (\r\n            <>\r\n                <Segment key={g}>\r\n                    <Header sub>Count {groups[g].length}</Header>\r\n                    <Image.Group size='small'>\r\n                            {this.renderImages(groups[g])}\r\n                    </Image.Group> \r\n                </Segment>\r\n                <Divider />\r\n            </>\r\n        ))\r\n    }\r\n\r\n    renderMonths = (data) => {\r\n        return Object.keys(data).map(m => <><Header sub>{this.toMonth(m)}</Header>{this.renderGroups(data[m])}</>)\r\n    }\r\n\r\n    renderYears = (data) => {\r\n        return Object.keys(data).map((y) => (<>\r\n            <Header as='h2' key={y} >{y}</Header>\r\n            {this.renderMonths(data[y])}\r\n            </>)\r\n        )\r\n    }\r\n    render = () => {\r\n    \r\n        const { data } = this.state\r\n        if(!data) {\r\n            return (\r\n                <Container>\r\n                    <Segment><Header as='h2'>Loading Data...</Header></Segment>\r\n                </Container>\r\n            )\r\n        }\r\n        return(\r\n        <Container>\r\n            { this.renderYears(data)}\r\n        </Container>)\r\n    }\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport MainPage from './page/main'\n\nexport default function App() {\n  return (\n    <Router>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/ui\" component={MainPage} />\n        </Switch>\n    </Router>\n  );\n}\n"],"sourceRoot":""}